node{

try{
 def mavenHome = tool name: 'maven3.8.6'
 
  echo "The JobNmae is: ${env.JOB_NAME}"
  echo "The node name is: ${env.NODE_NAME}"
  echo "The build number is: ${env.BUILD_NUMBER}"

 properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: '* * * * *'], pipelineTriggers([pollSCM('* * * * *')])])

   stage('CheckOutCode'){
   git credentialsId: '873a3730-0a14-4327-86a0-d41a3a7487a2', 
url: 'https://github.com/govindadevops/maven-web-application-1.git'
 }
 
 stage ('Build'){
 sh "${mavenHome}/bin/mvn clean package"
 }
 
 /*
 stage('ExcuteSonarQubeReport')
 {
 sh "${mavenHome}/bin/mvn clean sonar:sonar"
 }
 
 stage('UploadArtifactIntoNexus')
 {
 sh "${mavenHome}/bin/mvn clean deploy"
  }
  
  stage('DeployAppIntoTomcatServer'){
 sshagent(['c42a3b24-6770-44a0-a136-ee8a53e6bb2c']) {
  sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.34.39:/opt/apache-tomcat-9.0.65/webapps/"
 }  
 }
 */
 }//try closing
 catch(e){
 currentBuild.result="FAILURE"
 throw e
 }//catch closing
 finally{
 slackNotifications(currentBuild.result)
 }
}//Node Closing

//Code Snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  //buildStatus =  buildStatus ?: 'SUCCESS'
  buildStatus = buildStatus ? "SUCCESS":"FAILURE"

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#walmart")
}
